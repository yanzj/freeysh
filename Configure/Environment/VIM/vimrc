" ### =========================================================================
" vim 常用配置 "C==Ctrl,  " M==Alt "                                    ~.vimrc
" <leader>默认是\
" vim-color->
"            RGB, 1#19CAAD, 2#D1BA74, 3#F4606C, 4#ECAD9E, #00FF00绿色
"            vim配色方案 /usr/share/vim/vim80/colors/
"            :colorscheme slate, :colorscheme delek
" ### =========================================================================

set novisualbell                " turn off visual bell
set visualbell t_vb=            " turn off error beep/flash
set nocompatible                " 关闭 vi 兼容模式     
set cursorline                  " 设置高亮显示当前行___________________________  



" ### =========================================================================
""" 语法高亮 
syntax enable                   " 语法高亮
syntax on



" ### =========================================================================
""" 配色方案(color scheme) 
colorscheme  molokai  
set t_Co=256
set background=dark
let g:molokai_original=1
let g:rehash256=1



" ### =========================================================================
""" Tab键和缩进设置
set noexpandtab                 " 不要用空格代替制表符
set autoindent                  " 设置自动缩进
set cindent                     " cindent对c语法的缩进更加智能灵活   
set smartindent                 " 比autoindent稍智能的自动缩进
set smarttab                    " 解决 shiftwidth 和 tabstop 不等时的麻烦
set tabstop=4                   " Tab键的宽度    
set softtabstop=4               " 统一缩进为4  
set shiftwidth=4                " 反向制表符中的空格数目  
 
set backspace=2         
" 使回格键（backspace）正常处理indent, eol, start等                       
" set backspace=indent,eol,start 
" 代表的意思是“缩进位置”，“行结束符”，“段首
" 这样设置可以使得 backspace 键在这三个特殊的位置也能进行回删动作

set list listchars=eol:¬,tab:▸\ ,trail:.,
" list 开启对于制表符（tab）、行尾空格符（trail）、行结束符（eol）等等特殊符号的回显，
" 有助于你观察这些特殊符号的状态，精确地控制文本的编辑。

set fillchars=vert:\ ,stl:\ ,stlnc:\   
" 在被分割的窗口间显示空白，便于阅读
   


" ### =========================================================================
""" 文件设置 
set nowrap                      " 不自动换行
set number                      " 显示行号
set history=1000                " 历史记录数    
filetype on                     " 侦测文件类型     
filetype indent on              " 开启缩进规则
filetype plugin on              " 顾名思义，这是开启对应插件的 
set nobackup                    " 用来控制我们是否为当前正在编辑的文件建立备份
set ruler                       " 在屏幕下方显示标尺
set showmode                    " 在左下角显示当前的模式名称，没有显示则代表现在是常规模式
set scrolloff=3                 " 光标移动到buffer的顶部和底部时保持3行距离  
set confirm                     " 在处理未保存或只读文件的时候，弹出确认



" ### =========================================================================
""" 查找和替换
" set ignorecase        " 搜索忽略大小写    
set hlsearch            " 搜索逐字符高亮  
set incsearch           " 输入搜索内容时就显示搜索结果    
set showmatch           " 高亮显示匹配的括号     
set matchtime=5         " 匹配括号高亮的时间（单位是十分之一秒）
set smartcase           " 此选项的开启会让搜索模式更加聪明
    
    

" ### =========================================================================
""" 设定默认解码
set encoding=utf-8
set fileencodings=ucs-bom,utf-8,cp936
set fileencoding=gb2312
set termencoding=utf-8
 
 

" ### =========================================================================
""" 语言设置
set langmenu=zh_CN.UTF-8  
set helplang=cn



" ### =========================================================================
""" 鼠标设置
set mouse=a  
set selection=exclusive  
set selectmode=mouse,key  



" ### =========================================================================
""" 多个窗口切换
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l



" ### =========================================================================
""" 自动括号补全
inoremap ( ()<ESC>i
inoremap [ []<ESC>i
inoremap { {}<ESC>i
inoremap < <><ESC>i
inoremap " ""<ESC>i



" ### =========================================================================
""" 命令行模式增强
" ctrl - a到行首， -e 到行尾
cnoremap <C-a> <Home>
cnoremap <C-e> <End>






" #############################################################################
" vim-plug: Vim plugin install              安装Vim 插件管理器
" =============================================================================
"
" Download plug.vim and put it in ~/.vim/autoload
"
"   curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim


" ### =========================================================================
" Plug-in management           plug-in 插件管理器配置文件 
call plug#begin('~/.vim/plugged')                                          

Plug 'mhinz/vim-startify'
Plug 'scrooloose/nerdtree'

call plug#end()



" ### =========================================================================
" Plug-in startify Configuration         startify插件配置文件
let g:startify_change_to_dir = 0                " 禁止 startify 自动切换目录



" ### =========================================================================
"""Plug-in nerdtree Configuration         NERDTreeFind 插件配置文件
nmap ,v :NERDTreeFind<cr>  " 将 ,v ,g 设置为开关NERDTree的快捷键,在 normal模式下
nmap ,g :NERDTreeToggle<cr>
autocmd vimenter * NERDTree                     " 打开vim时自动打开NERDTree
autocmd vimenter * if !argc()|NERDTree|endif    " 打开vim时如果没有文件自动打开NERDTree
let g:NERDTreeHidden=0                          " 不显示隐藏文件
let g:NERDTreeDirArrowExpandable = '+'          " 修改树的显示图标
let g:NERDTreeDirArrowCollapsible = '-'
"let g:NERDTreeSize=20                          " 窗口尺寸
let g:NERDTreeShowLineNumbers=1                 " 窗口是否显示行号


