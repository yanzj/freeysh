
sudo st-flash write file_name.bin 0x8000000


ctrl+ "-"				缩编辑区域字体
ctrl+shift+ "+"			放大编辑区域字体

ctrl+ /		光标所在行，快速添加注释和取消注释>>//
Ctrl+Shift+/选中一块区域添加注释
Ctrl+Shift+\选中一块区域取消注释

ctrl+ M		编辑窗口最大化
Ctrl+ D		删除当前行
Ctrl+L 		定位在某行 (对于程序超过100的人就有福音了)
Ctrl+M 		最大化当前的Edit或View (再按则反之)
Ctrl+Shift+X把当前选中的文本全部变为小写
Ctrl+Shift+Y把当前选中的文本全部变为小写
alt + F11	全屏切换

Project->Properties->C/C++ Build->Settings >>与MCU编译相关的参数设置
Run->Exteral Tools->External Tools Configrations >>外部扩展工具配置
Window->Preferences->General->Appearance->Color and Fonts >>字体设置
Window->Run/Debug->String Substitution >>创建和配置字符串配置变量


###############################################################################
此配置参数针对 STM32F10X标准固件函数库  V3.5.0

Project->Properties->C/C++ Build->Settings

1.	Cross ARM C Compiler
	Preprocessor:	>>预处理包含的2个重要的宏的定义  >>这两个宏的定义位置在 stm32f10x.h 文件中。		
		STM32F10X_HD
		USE_STDPERIPH_DRIVER


3.	Cross ARM C Compiler
	includes			>>添加头文件

4. 	Cross ARM C Linker	>>添加正确的链接文件

5.	启动文件后缀名改为大写 >>[.S]

6.	修改 core_cm3.c文件，针对STM32F10x_StdPeriph_Lib_V3.5.0库函数>>>

	打开工程文件\STM32F10x_StdPeriph_Lib_V3.5.0\Libraries\CMSIS\CM3\CoreSupport下的core_cm3.c，
	在此文件的最后几行的位置，找到
	 __ASM volatile ("strexb %0, %2, [%1]" : "=r" (result) : "r" (addr), "r" (value) );
	 __ASM volatile ("strexh %0, %2, [%1]" : "=r" (result) : "r" (addr), "r" (value) );	  
	 两行，并更改如下>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>	 
	 __ASM volatile ("strexb %0, %2, [%1]" : "=&r" (result) : "r" (addr), "r" (value) );
	 __ASM volatile ("strexh %0, %2, [%1]" : "=&r" (result) : "r" (addr), "r" (value) );
	修改完成后，保存！注意，请再选中工程项目，刷新F5，再一次编译
	
7. stm32f10x_conf.h >>此文件的定义位于 >>stm32f10x.h 文件中
	>>此文件定义所有库函数的头文件定义部分

##############################################################################











