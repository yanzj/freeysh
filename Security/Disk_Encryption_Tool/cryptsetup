### ===========================================================================
Crypsetup工具加密
Crypsetup工具加密的特点：
1 加密后不能直接挂载
2 加密后硬盘丢失也不用担心数据被盗
3 加密后必须做映射才能挂载


### ===========================================================================
(A)准备环境：
1． 确认cryptsetup软件是否安装：


### ===========================================================================
(B)新建磁盘分区：
[root@localhost ~]# fdisk -cu /dev/sdb
Command (m for help): n #新建分区
Command action
e extended
p primary partition (1-4)
p #选择主分区
Partition number (1-4): 1 #分区号为1
First sector (2048-41943039, default 2048): #此处回车
Using default value 2048
Last sector, +sectors or +size{K,M,G} (2048-41943039, default 41943039): +5G #给定大小为5G
Command (m for help): w #保持存对硬盘的更改并退出
The partition table has been altered!
Calling ioctl() to re-read partition table.
Syncing disks.
[root@localhost ~]# partx -a /dev/sdb #让系统重新读取磁盘/dev/sdb的分区表




### ===========================================================================
1.对磁盘设置密码

[root@localhost ~] cryptsetup luksFormat /dev/sdb1
WARNING!
========
This will overwrite data on /dev/sdb1 irrevocably.
Are you sure? (Type uppercase yes): YES  # 注意这里必须是大写的 "YES"
Enter LUKS passphrase:                  #输入密码, 密码要足够复杂，不能过短、基于字典等
Verify passphrase:                      #再次输入
Command successful.



### ===========================================================================
2.映射分区

[root@localhost ~]# cryptsetup luksOpen /dev/sdb1 fage_crypt    #把sdb1映射为fage_crypt
Enter passphrase for /dev/sdb1:                                 #此处输入加密密码
[root@localhost ~]# ls /dev/mapper/fage_crypt                   #查看映射的磁盘
    /dev/mapper/fage_crypt
[root@localhost ~]# cryptsetup status /dev/mapper/fage_crypt    #查看加密分区的状态
    /dev/mapper/fage_crypt is active.
    type: LUKS1
    cipher: aes-cbc-essiv:sha256
    keysize: 256 bits
    device: /dev/sdb1
    offset: 4096 sectors
    size: 10481664 sectors
    mode: read/write
 
#映射也可用绝对路径查看映射设备的状态   
[root@localhost ~] cryptsetup status fage_crypt     


### ===========================================================================
3.对映射的设备进行格式化, 挂载
  
# mkfs.xfs /dev/mapper/fage_crypt             #设备格式化, xfs文件系统
# mkdir /fage_data                            #创建挂载点
# mount /dev/mapper/fage_crypt /fage_data/    #将加密分区挂载到/fage_data目录下
# df -Th | tail -1                            #查看是否挂载成功

# cd /fage_data/
# touch fage.file
# ls
fage.file lost+found



### ===========================================================================
4.关闭映射分区

[root@localhost ~]# umount /fage_data/         #卸载分区

# ls /dev/mapper/fage_crypt
    /dev/mapper/fage_crypt
    
# cryptsetup luksClose fage_crypt             #关闭加密分区

# ls /dev/mapper/                             #再次查看时已经没有fage_crypt设备了
    control VolGroup-lv_root VolGroup-lv_swap







###############################################################################
############################## Option #########################################
###############################################################################
### ===========================================================================
5、设置开机自动启动

① 修改配置文件/etc/crypttab–>加入映射关系

[root@localhost ~]# vim /etc/crypttab
[root@localhost ~]# cat /etc/crypttab
fage_crypt /dev/sdb5

文件/etc/crypttab中对应填入:
{ 映射设备名 加密设备 密码文件(为空时表示开机需要手动输入密码) }


②设置开机自动挂载：xuegod_disk == fage_crypt

[root@super ~]# blkid /dev/mapper/xuegod_disk
/dev/mapper/xuegod_disk: UUID="f6bd6551-8bbb-4f67-bcb1-dfc4ac28b6d7" TYPE="xfs" 
[root@super ~]# vim /etc/fstab
[root@super ~]# tail -1 /etc/fstab
UUID="f6bd6551-8bbb-4f67-bcb1-dfc4ac28b6d7" /root/mount/xuegod_disk xfs defaults 0 0
[root@super ~]# blkid /dev/sdb5
/dev/sdb5: UUID="6b54d2b1-5b0e-4481-9cf1-35bceea12717" TYPE="crypto_LUKS"




7、设置开机自动输入磁盘密码

①创建密钥文件：

[root@super ~]# touch xuegod_passwd
[root@super ~]# cryptsetup luksAddKey /dev/sdb5 ./xuegod_passwd
Enter any passphrase:      -->输入磁盘密码



②在配置文件/etc/crypttab中加入密钥文件

[root@super ~]# vim /etc/crypttab
[root@super ~]# cat /etc/crypttab 
xuegod_disk /dev/sdb5 /root/xuegod_passwd


8、一些后话
（1）此时已经设置完成，以后就可以像使用正常设备一样，使用虚拟出来的 /dev/mapper/xuegod_disk
来做任何操作了，直接格式化可以，拿来做pv也可以，但同时以后也就不能直接使用设备/dev/sdb5了。
若不用设备/dev/mapper/xuegod_disk时，将其关闭（先卸载后关闭）：

[root@super ~]# umount /dev/mapper/xuegod_disk
[root@super ~]# cryptsetup luksClose xuegod_disk


需要使用时重新使用luksOpen选项打开即可： 
此外，清空配置文件/etc/crypttab重启系统后将不会自动开启映射设备，
此时同时也要注释掉/etc/fstab文件中相应的自动挂载信息，否则系统将无法正常启动。

（2）设备加密后的特点：

    加密后不能直接挂载
    加密后硬盘如果丢失，数据不会被盗
    加密后必须做映射才能挂载

鉴于以上特点全都是基于加密后，故研究出加密设备解除封印之秘法：
先关闭映射设备，再进行强制格式化（-f选项）

[root@super ~]# cryptsetup luksClose xuegod_disk
[root@super ~]# mkfs.xfs -f /dev/sdb5
meta-data=/dev/sdb5              isize=256    agcount=4, agsize=32000 blks
         =                       sectsz=512   attr=2, projid32bit=1
         =                       crc=0        finobt=0
data     =                       bsize=4096   blocks=128000, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0 ftype=0
log      =internal log           bsize=4096   blocks=853, version=2
         =                       sectsz=512   sunit=0 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
[root@super ~]# blkid /dev/sdb5
/dev/sdb5: UUID="f6023376-7609-4b61-9d80-b4dfdab7529e" TYPE="xfs"

此时尝试开启映射设备：
[root@super ~]# cryptsetup luksOpen /dev/sdb5 xuegod_disk
Device /dev/sdb5 is not a valid LUKS device.



（3）扩展（引用于总结Ⅲ外链）：
从理论上讲：任何一种磁盘加密工具，（在不借助外部机制的情况下）都【不可能】实现真正的“自启动全盘加密”。
　　为啥捏？因为要想【自启动】，必须要有一个引导程序（在MBR中），
　　至少这个引导程序不能加密（引导程序如果被加密了，就无法引导启动了）。
　　所以，凡是能够实现“自启动全盘加密”的，其【引导程序】都是明文的（无加密的）
　　比如 TrueCrypt 和 VeraCrypt 进行全盘加密，都会替换原有的主引导扇区（MBR）的内容，在里面放入一段代码。
　　这段代码会在开机启动的时候，提示你输入密码，然后用你输入的密码进行解密。
　　对于 dm-crypt 的全盘加密，除了“主引导扇区”【没有】加密，还包括 /boot 分区也【没有】加密（因为/boot 分区要引导管理器和内核）。
　　
　　
　　
　　
9、全篇总结
Ⅰ、cryptsetup常用参数：
    luksFormat：设定磁盘密码
    luksOpen：开启映射设备
    luksClose：关闭映射设备
    luksAddKey：给映射设备添加密钥文件
    luksRemoveKey：从映射中移除密钥文件（失效）
    luksUUID：打印加密设备的UUID号
    status：查看映射设备信息

Ⅱ、/etc/crypttab：映射关系配置文件
    在里面填入三项：映射设备名 加密设备 密钥文件
    系统启动时后会自动读取该文件中的内容
    当注释掉该文件内容时务必也要注释掉自动挂载文件(/etc/fstab)中与之相关的内容，否则系统开不



/*
Option-backup
设置开机自动挂载,生成密钥文件，如果想开机时手动输入密码可以不生成
   
    1)#创建加密文件，安全起见该文件设为隐藏文件
[root@localhost ~]# touch /root/.fage_crypt

    2)#为/dev/sdb1分区添加密钥文件.fage_crypt
[root@localhost ~]# cryptsetup luksAddKey /dev/sdb1 /root/.fage_crypt   
    Enter any passphrase:                   #输入该分区的加密密码，必须和创建时的一致
[root@localhost ~]# cat /root/.fage_crypt
[root@localhost ~]# file /root/.fage_crypt  #验证
    /root/.fage_crypt: empty
    
    3)#设置开机启动, #编辑”加密的块设备”表crypttab添加如下行
[root@localhost ~]# vim /etc/crypttab                                   
    fage_crypt /dev/sdb1 /root/.fage_crypt
###fage_crypt为映射名称，/dev/sdb1是加密设备设备，/root/.fage_crypt为密码文件，
###如果想开机手动输入密码，密码文件处空着即可

    4)#编辑添加加密分开机启动
[root@localhost ~]# vim /etc/fstab 
    /dev/mapper/fage_crypt /fage_crypt ext4 defaults 0 0
现在加密分区就完成了!!
*/
###############################################################################

