### ================================================================基本的加密思想
__________________________________________________________
置换法：按照规则改变内容的排列顺序
Ｘ   Ａ   Ｐ   Ｃ   Ｃ   Ｏ   Ｍ
Ｙ   Ｃ   Ｑ   Ｅ   Ｄ   Ｑ   Ｎ
上例的置换规则：
奇数位的ASCII码加1，偶数位的ASCII码加2.
___________________________________________________________
移位法：按照规则打乱字母的排列顺序
Ｅ   Ｘ   Ａ   Ｍ   Ｐ   Ｌ   Ｅ
Ｅ   Ｌ   Ｐ   Ｍ   Ａ   Ｘ   Ｅ
___________________________________________________________
移位和置换都是可逆的操作，容易恢复信息
移位和置换也常用到现代密码学算法中，
加密的实现，不只是信赖以上这些基本的思想，
同时也信赖很多巧妙的设计，如军事中应用的加密电报：
除了使用安全性很高的编码规则外，解密还涉及到收发双主的约定。
___________________________________________________________
简单的加密设计： 用密钥对原文做  异或，置换，代换，移位
### ==================================================================加密相关术语
    明文      Ｐｌａｉｎｔｅｘｔ    
    密文      Ｃｉｐｈｅｒｔｅｘｔ 
    算法      Ａｌｇｏｒｉｈｔｍ   
    密钥      Ｋｅｙ               
    加密      Ｅｎｃｒｙｐｔｉｏｎ  
    解密      Ｄｅｃｒｙｐｔｉｏｎ  
    消息摘要Ｍｅｓｓａｇｅ　Ｄｉｇｅｓｔ
    数字摘要Ｄｉｇｔｉａｌ　Ｄｉｇｅｓｔ
    数字指纹Ｆｉｎｇｅｒ　Ｐｒｉｎｔ
    数字签名Ｄｉｇｉｔａｌ　Ｓｉｇｎａｔｕｒｅ
       
       
Privacy Guard,隐私保护; 隐私守卫        
Message Digest又称为数字摘要(Digital Digest)

### ===============================================================私有密钥密码体系
____________________________________________________________
对称加密算法(又称私有密钥加密算法)，symmetric encryption algorithm 
___________________________________________________________
对称加密算法是应用较早的加密算法，技术成熟。
在对称加密算法中，
数据发信方将明文（原始数据）和加密密钥（mi yao）一起经过特殊加密算法处理后，
使其变成复杂的加密密文发送出去。收信方收到密文后，若想解读原文，
则需要使用加密用过的密钥及相同算法的逆算法对密文进行解密，才能使其恢复成可读明文。
在对称加密算法中，使用的密钥只有一个，发收信双方都使用这个密钥对数据进行加密和解密，
这就要求解密方事先必须知道加密密钥。
___________________________________________________________
对称加密(也叫私钥加密)指加密和解密使用相同密钥的加密算法。
有时又叫传统密码算法，就是加密密钥能够从解密密钥中推算出来，
同时解密密钥也可以从加密密钥中推算出来。而在大多数的对称算法中，
加密密钥和解密密钥是相同的，所以也称这种加密算法为秘密密钥算法或单密钥算法。
它要求发送方和接收方在安全通信之前，商定一个密钥。对称算法的安全性依赖于密钥，
泄漏密钥就意味着任何人都可以对他们发送或接收的消息解密，
所以密钥的保密性对通信的安全性至关重要。
___________________________________________________________
对称加密算法的特点是算法公开、计算量小、加密速度快、加密效率高。
不足之处是，交易双方都使用同样钥匙，安全性得不到保证。
此外，每对用户每次使用对称加密算法时，都需要使用其他人不知道的惟一钥匙，
这会使得发收信双方所拥有的钥匙数量呈几何级数增长，密钥管理成为用户的负担。
对称加密算法在分布式网络系统上使用较为困难，主要是因为密钥管理困难，使用成本较高。
而与公开密钥加密算法比起来，
对称加密算法能够提供加密和认证却缺乏了签名功能，使得使用范围有所缩小。
在计算机专网系统中广泛使用的对称加密算法有DES和IDEA等。
美国国家标准局倡导的AES即将作为新标准取代DES。
_________________________________________________________
蓍名的对称加密算法：
1 DES/3DES数据加密标准
  DES（Data Encryption Standard）：
  对称算法，数据加密标准，速度较快，适用于加密大量数据的场合； 
  3DES（Triple DES）：是基于DES的对称算法，
  对一块数据用三个不同的密钥进行三次加密，强度更高；
  ___________________________________________________________
2 IDEA国际数据加密算法
  IDEA（International Data Encryption Algorithm）国际数据加密算法，
  使用 128 位密钥提供非常强的安全性；
  ___________________________________________________________
3 RC系列(RC2，R4，RC5)
  现在我们用到的RC系列算法包括RC2、RC4、RC5、RC6算法，
  其中RC4是序列密码算法，其他三种是分组密码算法。 
  RC2算法
  该算法设计的目的是用来取代DES算法，
  它采用密钥长度可变的对明文采取64位分组的分组加密算法，属于Festel网络结构。
  ___________________________________________________________
4 CAST
  CAST加密算法属于称为Feistel结构的加密算法，对于微分密码分析、
  线性密码分析、密码相关分析具有较好的抵抗力，
  并符合严格雪崩标准和位独立标准，没有互补属性，也不存在软弱或者半软弱的密钥。
  因此，对于要求密码强壮、加密算法容易获取的Internet而言，
  CAST-128是一种能够满足一般应用的很好的选择
  ___________________________________________________________
5 Blowfish/Twofish
  BLOWFISH，它使用变长的密钥，长度可达448位，运行速度很快
    TWOFISH是128位分组加密算法。
  支持128、196、256比特的密钥长度
  在Blowfish算法的基础上吸收SqureIMA中的MDS码矩阵和Safer系列密码中的PHT结构而设计的
  快速、紧凑、简单和可变安全性
  ___________________________________________________________
6 AES高级数据加密标准
  AES（Advanced Encryption Standard）：高级加密标准，
  对称算法，是下一代的加密算法标准，速度快，安全级别高，
  在21世纪AES 标准的一个实现是 Rijndael 算法

### ==============================================================公开密钥密码体系
___________________________________________________________
公钥密码

这仅仅是当今密码学主题的一个方面。对信息发送与接收人的真实身份的验证、
对所发出/接收信息在事后的不可抵赖以及保障数据的完整性是现代密码学主题的另一方面。
公开密钥密码体制对这两方面的问题都给出了出色的解答,并正在继续产生许多新的思想和方案。
在公钥体制中，加密密钥不同于解密密钥。人们将加密密钥公之于众，谁都可以使用；
而解密密钥只有解密人自己知道。迄今为止的所有公钥密码体系中，
RSA系统是最著名、使用最广泛的一种。
___________________________________________________________
1976年提出公共密钥密码体制，其原理是加密密钥和解密密钥分离。
这样，一个具体用户就可以将自己设计的加密密钥和算法公诸于众，而只保密解密密钥。
任何人利用这个加密密钥和算法向该用户发送的加密信息，该用户均可以将之还原。
公共密钥密码的优点是不需要经安全渠道传递密钥，大大简化了密钥管理。
它的算法有时也称为公开密钥算法或简称为公钥算法。
1978年提出公共密钥密码的具体实施方案，即RSA方案。
1991年提出的DSA算法也是一种公共密钥算法，在数字签名方面有较大的应用优势。
_______________________________________________________________________________
公钥体系结构中的一些基本概念与结构组成
密钥对在基于公钥体系的安全系统中，密钥是成对生成的，每对密钥由一个公钥和一个私钥组成.
在实际应用中，私钥由拥有者自己保存，而公钥则需要公布于众。
为了使基于公钥体系的业务（如电子商务等）能够广泛应用，
一个基础性关键的问题就是公钥的分发与管理。
公钥本身并没有什么标记，仅从公钥本身不能判别公钥的主人是谁。
在很小的范围内，比如A和B这样的两人小集体，
他们之间相互信任，交换公钥，在互联网上通讯，没有什么问题。
这个集体再稍大一点，也许彼此信任也不成问题，但从法律角度讲这种信任也是有问题的。
如再大一点，信任问题就成了一个大问题。
_______________________________________________________________________________
### ========================================================Ｃｅｒｔｉｆｉｃａｔｅ
证书，Ｃertificate 
___________________________________________________________   
互联网络的用户群决不是几个人互相信任的小集体，在这个用户群中，
从法律角度讲用户彼此之间都不能轻易信任。
___________________________________________________________
所以公钥加密体系采取了另一个办法，将公钥和公钥的主人名字联系在一起.
___________________________________________________________
再请一个大家都信得过有信誉的公正、权威机构确认，
并加上这个权威机构的签名,这就形成了证书.
___________________________________________________________
由于证书上有权威机构的签字，所以大家都认为证书上的内容是可信任的.
___________________________________________________________
又由于证书上有主人的名字等身份信息，别人就很容易地知道公钥的主人是谁.
_______________________________________________________________________________
### ========================================ＣｅｒｔｉｆｉｃａｔｅＡｕｔｈｏｒｉｔｙ
ＣＡ,Ｃertificate－Ａuthority,证书颁发机构
___________________________________________________________
前面提及的权威机构就是电子签证机关，即CA（Certificate Authority）,
ＣＡ（Certificate Authority）也拥有一个证书（内含公钥），
当然，它也有自己的私钥，所以它有签字的能力。
网上的公众用户通过验证ＣＡ（Certificate Authority）的签字从而信任ＣＡ（Certificate Authority），
任何人都应该可以得到ＣＡ（Certificate Authority）的证书（含公钥），用以验证它所签发的证书。
___________________________________________________________
如果用户想得到一份属于自己的证书，他应先向ＣＡ（Certificate Authority）提出申请。
在ＣＡ（Certificate Authority）判明申请者的身份后，便为他分配一个公钥，
并且ＣＡ（Certificate Authority）将该公钥与申请者的身份信息绑在一起，
并为之签字后，便形成证书发给那个用户（申请者）。
___________________________________________________________
如果一个用户想鉴别另一个证书的真伪，他就用CA的公钥对那个证书上的签字进行验证，
『如前所述，ＣＡ签字实际上是经过ＣＡ（Certificate Authority）私钥加密的信息，
签字验证的过程还伴随使用ＣＡ（Certificate Authority）公钥解密的过程』，
___________________________________________________________
一旦验证通过，该证书就被认为是有效的。
___________________________________________________________
ＣＡ（Certificate Authority）除了签发证书之外，它的另一个重要作用是证书和密钥的管理。
由此可见，证书就是用户在网上的电子个人身份证，同日常生活中使用的个人身份证作用一样。
ＣＡ（Certificate Authority）相当于网上公安局，专门发放、验证身份证。

### =====================================================================数字签名
它要求拿发送方的私钥生成一个签名块，接收方只能拿发送方的私钥来验证。
因为私钥只有发送方持有，所以别人是不可能伪造的。
但是我们如果直接使用非对称加密算法对要发送的数据时行加密，
加密的过程是非常耗时间的，使我们无法接受的。
___________________________________________________________
所以在此基础上引入了具有数据完整性验证的Ｈａｓｈ函数。
那我们就可以先对原文进行一次Ｈａｓｈ运算，然后等到一个“信息摘要”。
之后我们使用“非对称加密算法”对这个“信息摘要”做加密操作。
从而生成一个所谓的数字签名块，这就是数字签名。
有时它也被称之为“数字指纹”。

### =====================================================================数字信封
数字信封，指的是将“对称加密算法”和“非对称加密算法”结合起来使用的方法。
它看中了“对称加密算法”的快速性和“非对称加密算法”的安全性。
___________________________________________________________
正确的作法是：
先对数据实施对称加密，这样就可以把明文快速转换密文了。
然后再对“对称加密算法”的密钥实施“非对称加密算法”加密。
这就是数字信封的概念。

### =============================================================Ａｌｇｏｒｉｔｈｍ
算法
_______________________________________________________________________________
公开密钥算法是在1976年由当时在美国斯坦福大学的迪菲（Diffie）和赫尔曼(Hellman)两人首先发明的
（论文"New Direction in Cryptography"）。
_______________________________________________________________________________
但目前最流行的RSA是1977年由MIT教授Ronald L.Rivest,Adi Shamir和Leonard M.Adleman共同开发的,
分别取自三名数学家的名字的第一个字母来构成的。
_______________________________________________________________________________
1976年提出的公开密钥密码体制思想不同于传统的对称密钥密码体制，它要求密钥成对出现，
一个为加密密钥(e)，另一个为解密密钥(d)，且不可能从其中一个推导出另一个。
_______________________________________________________________________________
自1976年以来，已经提出了多种公开密钥密码算法，其中许多是不安全的， 
一些认为是安全的算法又有许多是不实用的，它们要么是密钥太大，要么密文扩展十分严重。
多数密码算法的安全基础是基于一些数学难题， 这些难题专家们认为在短期内不可能得到解决。
因为一些问题(如因子分解问题)至今已有数千年的历史了。
_______________________________________________________________________________
公钥加密算法也称非对称密钥算法，用两对密钥：一个公共密钥和一个专用密钥(也就是私有密钥)。
用户要保障专用密钥的安全；公共密钥则可以发布出去。
_______________________________________________________________________________
公共密钥与专用密钥是有紧密关系的，用公共密钥加密的信息只能用专用密钥解密，反之亦然。
由于公钥算法不需要联机密钥服务器，密钥分配协议简单，
所以极大简化了密钥管理。除加密功能外，公钥系统还可以提供数字签名。
_______________________________________________________________________________
RSA，公钥加密算法中使用最广的是RSA。
RSA使用两个密钥，一个公共密钥，一个专用密钥。
如用其中一个加密，则可用另一个解密，密钥长度从40到2048bit可变，
加密时也把明文分成块，块的大小可变，但不能超过密钥的长度，
RSA算法把每一块明文转化为与密钥长度相同的密文块。
密钥越长，加密效果越好，但加密解密的开销也大，所以要在安全与性能之间折衷考虑，
一般64位是较合适的。
RSA的一个比较知名的应用是SSL，在美国和加拿大SSL用128位RSA算法，由于出口限制，
在其它地区（包括中国）通用的则是40位版本。
RSA算法研制的最初理念与目标是努力使互联网安全可靠，
旨在解决DES算法秘密密钥的利用公开信道传输分发的难题。
而实际结果不但很好地解决了这个难题；
还可利用RSA来完成对电文的数字签名以抗对电文的否认与抵赖；
同时还可以利用数字签名较容易地发现攻击者对电文的非法篡改，以保护数据信息的完整性。

### ===========================================================================Ｈａｓｈ
____________________________________________________________________________________________________
Hash，一般翻译做“散列”，也有直接音译为“哈希”的，
就是把任意长度的输入（又叫做预映射pre-image）通过散列算法变换成固定长度的输出，该输出就是散列值。
这种转换是一种压缩映射，也就是，散列值的空间通常远小于输入的空间，不同的输入可能会散列成相同的输出，
所以不可能从散列值来确定唯一的输入值。简单的说就是一种将任意长度的消息压缩到某一固定长度的消息摘要的函数。

_______________________________________________________________________________
所有散列函数都有如下一个基本特性：
如果两个散列值是不相同的（根据同一函数），那么这两个散列值的原始输入也是不相同的。
这个特性是散列函数具有确定性的结果。
但另一方面，散列函数的输入和输出不是一一对应的，
如果两个散列值相同，两个输入值很可能是相同的，但不绝对肯定二者一定相等（可能出现哈希碰撞）。
输入一些数据计算出散列值，然后部分改变输入值，一个具有强混淆特性的散列函数会产生一个完全不同的散列值。
典型的散列函数都有无限定义域，比如任意长度的字节字符串，和有限的值域，比如固定长度的比特串。
在某些情况下，散列函数可以设计成具有相同大小的定义域和值域间的一一对应。
一一对应的散列函数也称为排列。可逆性可以通过使用一系列的对于输入值的可逆“混合”运算而得到
_______________________________________________________________________________
MD5(RFC 1321)是 Rivest 于1991年对MD4的改进版本。
它对输入仍以512位分组，其输出是4个32位字的级联，与 MD4 相同。
MD5比MD4来得复杂，并且速度较之要慢一点，但更安全，在抗分析和抗差分方面表现更好。

_______________________________________________________________________________
SHA-1
SHA1是由NIST NSA设计为同DSA一起使用的，它对长度小于2^64的输入，产生长度为160bit的散列值，
因此抗穷举(brute-force)性更好。SHA-1 设计时基于和MD4相同原理,并且模仿了该算法。





### ===========================================================================

