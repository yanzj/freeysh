### ===========================================================================
find [搜索范围] [匹配条件]

find ./ -name "*.o" -exec rm {} \;
### 查找当前目录下的所有.o文件，并删除它。

-iname 不区分大小写
-name 根据文件名查找    "pic"，  "*.c"
-type 根据文件类型查找   f文件， d目录， l链接文件
-inum 根据i节点查找      31531


/string 向下搜索string这个字符串
?string 向上搜索string这个字符串
自用 n或N 向下或向上搜索字符串



### ===========================================================================
find . -name "*.txt" -type d -mtime -1 | xargs rm -rf {} \;

find . -name "*.txt" -type d -mtime -1 -exec cp -r {} /tmp/ \;

find . -type f -name "*.log" -mtime +30 -exec rm -rf {} \;

find . -name "*.txt" -type f -mtime -1 -size +1024k
find . -name "*.txt" -type f -mtime -1 -size +5M

find . -type f -exec chmod -R 644 {} \;
find . -type d -exec chmod -R 755 {} \;




### ===========================================================================
find:遍历目录树
功能
find命令从指定的查找范围开始,递归地查找子目录,凡满足条件的文件或目录,执行规定的动作
举例
    find verl.d ver2.d -name '*.c' -print
    
范围:当前目录的子目录ver1.d 和ver2.d
条件:与名字*.c匹配。注:*.c应当用引号括起
动作:把查找到的文件的路径名打印出来



### ===========================================================================
find关于条件的选项(1)

-name wildcard
    文件名与wildcard匹配,注意:
    必需的引号
    这里的“文件名”仅指路径名的最后一部分
    对通配符的解释由find完成
    
-regex pattern
    整个路径名与正则表达式pattern匹配


### ===========================================================================
find关于条件的选项(2)

-type
    f:普通文件       d:目录          l:符号连接文件
    c:字符设备文件    b:块设备文件     p:管道文件

-size ±n 单位
    指定文件大小(大于+,等于,小于-)
    单位有c(字符), b(块,512字节), k(1024),M(兆),G(吉),默认为b

-mtime ±ndays   文件最近修改时间
-newer file     文件最近修改时间比file的还晚


### ===========================================================================
find关于条件的选项(3)

其它条件选项
(文件属性字段可用来对遍历到的目标进行筛选,查阅find手册)
    指定i节点号-inum
    可指定文件主-user,-nouser
    可指定用户组-group,-nogroup
    指定link数-links
    指定路径深度-depth
    指定文件的访问权限-perm


### ===========================================================================
复合条件
    可以用()  -a,–o,! 等表示多条件的“与”,“或”,“非”
    
    
    
### =========================================================================== 
find关于动作的选项
 
-print
    打印查找的文件的路径名
-exec
    对查找到的目标执行某一命令
    在-exec及随后的分号之间的内容作为一条命令
    在这命令的命令参数中,{}代表遍历到的目标文件的路径名
-ok
    与-exec类似,只是对查找到符合条件的目标执行一个命令前需要经过操作员确认    
    
    
    
    
### ===========================================================================    
find使用举例(1)

find . -type d -print
    从当前目录开始查找,寻找所有目录,打印路径名
    结果:按层次列出当前的目录结构

find / -name 'stud*' -type d -print
    指定了两个条件:名字与stud*匹配,类型为目录
    两个条件逻辑“与”,必须同时符合这两个条件

find / -type f -mtime -10 -print
    从根目录开始检索最近10天之内曾经修改过的普通磁盘文件(目录不算)


### =========================================================================== 
find使用举例(2)

find . ! -type d -links +2 -print
    从当前目录开始检索link数大于2的非目录文件
    条件“非”用!
    注意:!号与-type之间必须保留一空格



### =========================================================================== 
find使用举例(3)

find ~ -size +100k \( -name core -o -name '*.tmp' \) -print
    从主目录开始寻找大于100KB的名叫core或有.tmp后缀
    使用了两条件“或” (-o)及组合(圆括号)不要遗漏了所必需的引号,反斜线和空格,尤其是圆括号前和圆括号后。
    圆括号是shell的特殊字符

其他写法
find / -size +100k '(' -name core -o -name \*.tmp ')' -print
find / -size +100k \( -name core –o -name \*.tmp ')' -print



### =========================================================================== 
find使用举例(4)

find /lib /usr -name 'libc*.so' -exec ls -lh {} \;
    -exec及随后的分号之间的内容作为一条命令执行
    ;shell中分号有特殊含义,前面加反斜线\
    {}代表遍历时所查到的符合条件的路径名。注意,两花括号间无空格,之后的空格不可省略
    -ok选项在执行指定的命令前等待用户确认
    
find ~ -size +100k \( -name core -o -name ‘*.tmp’ \) -ok rm {} \;



### =========================================================================== 
find使用举例(5)
利用find的递归式遍历目录的功能在文件中搜寻字符串

find src -name \*.c -exec grep -n -- --help {} /dev/null \;
    在目录src中所有.c文件中查找--help字符串
    grep的-n选项,--选项,/dev/null文件的作用
    其他类似做法:将满足条件的文件转码或者对文件进行其他分析处理等



### ===========================================================================
find与xargs的组合

find src -name \*.c –print | xargs grep -n -- --help
    xargs命令把标准输入追加到它的参数列表后面,也就是上述grep...的后面,再作
    为一个命令来执行。这样利用find精确筛选,利用grep批量处理文件,提高效率。



### ===========================================================================
xargs:将标准输入组织成命令执行

将标准输入构造为命令的命令行参数
如果标准输入的数据量很大,xargs指定的处理程序会启动多个进程运行,
    每个进程处理一批,会是几千个参数(命令行参数占满128K字节)
可以使用xargs的-n选项指定每批处理多少个
xargs经常与find配合使用,也可以与其它命令组合使用



### ===========================================================================
xargs:构造参数列表并运行命令

解决shell文件名生成时,因为文件太多,缓冲区空间受限而文件名展开失败的问题

rm -f *.dat 文件名*.dat展开失败,可以使用下面的命令
ls | grep ".dat$" | xargs rm -f

find命中目录名因删除目录导致目录遍历过程遇到麻烦
find . -name CVS –exec rm –rf {} \;
改为:
find . -name CVS -print | xargs rm -rf






