### ==========================================================================用户管理
越是对服务器安全性要求高的服务器，越是需要建立合理的用户管理权限等级制度和服务器管理规范。
在 Linux中主要通过用户配置文件来查看和修改用户信息。
_______________________________________________________________________________

-rw-r--r--      1       ysh     ysh     4421	8月10号 13:32	   .bashrc
_______________________________________________________________________________
1                2       3       4       5          6                7
_______________________________________________________________________________
1 第1栏代表这个文件在类型与权限
2 第2栏代表有多少个文件名连接到此结点上
3 第3栏代表这个文件或目录所有者帐号
4 第4栏代表这个文件或目录所属组在帐号
5 第5栏代表这个文件在大小，预设单位为：bytes
6 第6栏代表这个文件的日期或最近修改时间
7 第7栏代表这个文件的文件名称

### ===========================================================================ＳＵ　-
su [选项] 用户名                              # su 切换用户
-	选项使用“-”，代表连->用户的环境变量一起切换
-c	仅执行一次命令，而不切换用户身份
1 su - root		
不切换root，但是执行useradd命令添加user3用户	
2 su - root -c "useradd user3"

### ===========================================================================ＣＨＭＯＤ
change th permissions mode of a file,　　                         chmod,改变文件的权限
chmod [{ugoa}{+-=}{rwx}] [文件或目录]
      [mode=421] [文件或目录]
      -R,递归修改
u==user, g==group, o==other, a==all
r==4,    w==2,     x==1
###　===========================================================================ＣＨＯＷＮ
                                                                chown,改变文件在拥有者
change file ownership
改变文件或目录的所有者
chown [用户] [文件或目录]    
                                                                                                                                                                                         
###　===========================================================================ＣＨＧＲＰ
                                                                chgrp,改变文件的所属组
change file group ownership
功能描述： 改变文件或目录的所属组
chgrp [用户组] [文件或目录]                                                                

                                                                                                                     
### ===========================================================================ＵＳＥＲＡＤＤ
useradd [选项] 用户名                         # 添加新用户
-u	手工指定伤亡的UID号
-d	手工指定用户的家目录 
-c	手工指定用户的说明
-g	手工指定用户的初始组
-G	手工指定用户的附加组
-s	手工指定用户登陆的shell,默认的shell,/bin/bash
### ===========================================================================ＰＡＳＳＷＤ
passwd [选项] 用户名
-S	#查询用户密码状态，仅root用户可用。
-l	#暂时锁定用户，仅root用户可用。
-u	#解锁用户，仅root用户可用。
--stdin	#可以通过管道符的输出的数据作为用户的密码。
使用字符串作为用户的密码：
# echo "123" | passwd --stdin hong
### ===========================================================================ＵＳＥＲＤＥＬ
userdel [-r] 用户名                      # userdel 删除用户
-r	删除用户的同时删除用户家目录

手工删除用户目录
vi /etc/passwd
vi /etc/shadow
vi /etc/group
vi /etc/gshadow
rm -rf /var/spool/mail/lamp
rm -rf /home/lamp/
### ===========================================================================ＣＨＡＮＧＥ
chage [选项] 用户名                 # chage 修改用户密码状态
-l	#列出用户详细密码状态
-d 日期	#修改密码最后一次更改日期(shadow3字段)
-m 天数	#两次密码修改间隔(4字段)
-M 天数	#密码有效期限(5字段)
-W 天数	#密码过期警告天数(6字段)
-I 天数	#密码过期后宽限天数(7字段)
-E 日期	#账号失效时间(8字段)
例如：	
这个命令其实是把密码修改日期归零了，(shadow3字段)
这样用户一登陆就要修改密码。
chage -d 0 lamp
### ===========================================================================ＵＳＥＲＭＯＤ
usermod [选项] 用户名                        # 修改用户信息
-u	修改用户UID号
-c	修改用户说明信息
-G	修改用户附加组
-L	临时锁定用户(Lock)
-U	解锁用户锁定(Unlock)
### ===========================================================================ＧＲＯＵＰＡＤＤ
groupadd 添加组                                # 用户组管理
groupadd [选项] 组名
-g GID	指定组ID
### ===========================================================================ＧＲＯＵＰＭＯＤ
groupmod 修改用户组
groupmod [选项] 组名
-g GID		修改组ID
-n 新组名	修改组名
# 把组名oldgrp修改为newgrp
groupmod -n newgrp oldgrp
### ===========================================================================ＧＲＯＵＰＤＥＬ
groupdel 组名             #删除组名


###　===========================================================================ＵＭＡＳＫ
umask -S        与rwx在形式显示新建文件的缺省权限
umask 022       修改文件的缺省权限

###　===========================================================================Ｕ-Ｇ-Ｏ
u，代表所有者             g，代表所属组             o，代表其它人
r,4                       　　w,2                       x,1
_______________________________________________________________________________
名称	内容	                r		        w		        x
文件	详细资料	            读到文件内容	    修改文件	        执行文件
目录	文件名		        读到文件名	    修改文件名	    进入目录
_______________________________________________________________________________
drwxr-xr-x
第1个字母：      代表文件类型
第2~4字母：     代表用户的权限
第5~7字母：     代表用户组的权限
第8~10字母：    代表其他的用户的权限

____________________________________________________________
-   代表一般文件        d，代表目录      l，代表链接文件
b   block device 即块设备文件，如硬盘;支持以block为单位进行随机访问
c 	character device 即字符设备文件，如键盘支持以character为单位进行线性访问
p 	pipe 即命名管道文件
s 	socket 即套接字文件，用于实现两个进程进行通信


###　===========================================================================/etc/passwd
用户配置文件/etc/passwd
第1字段： 用户名称
第2字段： 密码标志，x代表有密码，存放在/etc/shadow
第3字段： UID(用户ID)
            0           超级用户
            1-499       系统用户(伪用户)
            500-65535   普通用户 

第4字段： GID(用户初始组ID)
第5字段： 用户说明
第6字段： 家目录
          普通用户：/home/用户名/
          超级用户：/root/
          
第7字段： 登陆之后的 shell, sbin/nologin
___________________________________________________________
2.初始组和附加组
   初始组：就是指用户一登陆就立刻拥有这个用户组的相关权限，
           每个用户的初始组只能有一个(主组只能有一个)，
           一般就是和这个用户的用户名相同的组名作为这个用户
           的初始组。
   附加组：指用户可以加入多人其它的用户组，并拥有这些组权限，
           附加组可以有多个。
___________________________________________________________
3 shell是什么？
shell就是Linux的命令解释器
在/etc/passwd当中除了标准的 shell是/bin/bash之外，
还可以写例如：/sbin/nologin, 禁止登陆的shell

###　===========================================================================/etc/shadow
/etc/shadow	$ man 5 shadow
第1字段： 用户名
第2字段： 加密密码
          加密算法升级为SHA512散列加密算法
          如果密码位是 "!!"或"*"代表没有密码，不能登陆。            
第3字段： 密码最后一次修改日期
          使用1970年1月1日作为标准时间，每过一天时间戳加1	
第4字段： 两次密码的修改时间间隔(和第3字段相比)
第5字段： 密码的有效期限(和第3字段相比)
第6字段： 密码修改到期前的警告天数(和第5字段相比)
第7字段： 密码过期后的宽限天数(和第5字段相比)
          0	　　代表密码过期后立即失效
          -1	代表密码永远不会失效          
第8字段： 账号失效时间，要用时间戳表示。
第9字段： 保留
___________________________________________________________
时间戳换算公式：
1 把时间戳换算为日期：
  date -d "1970-01-01 16066 days"
2 把日期换算成时间戳：
  echo $(($(date --date="2018/12/12" +%s)/86400+1))
###　===========================================================================/etc/group
5 /etc/group 组信息文件
第1字段： 组名
第2字段： 组密码标志
第3字段： GID，组ID
第4字段： 组中的附加组

###　===========================================================================/etc/gshadow
6 /etc/gshadow 组密码文件
第1字段： 组名
第2字段： 组密码
第3字段： 组管理员用户名
第4字段： 组中的附加用户
###　===========================================================================用户默认值文件
/etc/default/useradd	
GROUP=100               #用户默认组	
HOME=/home              #用户家目录
INACTIVE=-1             #密码过期宽限天数(shadow文件7字段)
EXPIRE=                 #密码失效时间
SHELL=/bin/bash         #默认shell
SKEL=/etc/skel          #模板目录
CREATE_MAIL_SPOOL=yes	#是否建立邮箱
/etc/login.defs
___________________________________________________________
PASS_MAX_DAYS 99999     #密码有效期(5字段)
PASS_MIN_DAYS 0         #密码修改间隔(4字段)
PASS_MIN_LEN  5         #密码最小5位
PASS_WARN_AGE 7         #密码到期限警告(6字段)
UID_MIN       500
GID_MAX       60000
ENCRYPT_METHOD SHA512   #加密模式
　










