### ===========================================================================
带有最常用选项的tr命令格式为：
tr -c -d -s ["string1_to_translate_from"]["string2_to_translate_to"] < input-file

-c 用字符串1中字符集的补集替换此字符集，要求字符集为ASCII。
-d 删除字符串1中所有输入字符。
-s 删除所有重复出现字符序列，只保留第一个；即将重复出现字符串压缩为一个字符串。
input-file是转换文件名。虽然可以使用其他格式输入，但这种格式最常用。

2、字符范围
指定字符串1或字符串2的内容时，只能使用单字符或字符串范围或列表。
[a-z] a-z内的字符组成的字符串。
[A-Z] A-Z内的字符组成的字符串。
[0-9] 数字串。
\octal 一个三位的八进制数，对应有效的ASCII字符。
[O*n] 表示字符O重复出现指定次数n。因此[O*2]匹配OO的字符串。
tr中特定控制字符的不同表达方式, 速记符含义八进制方式

\a Ctrl-G  铃声\007
\b Ctrl-H  退格符\010
\f Ctrl-L  走行换页\014
\n Ctrl-J  新行\012
\r Ctrl-M  回车\015
\t Ctrl-I  tab键\011
\v Ctrl-X  \030



### ===========================================================================
实例：

将文件file中出现的"abc"替换为"xyz"
# cat file | tr "abc" "xyz" > new_file
 
【注意】这里，凡是在file中出现的"a"字母，都替换成"x"字母，"b"字母替换为"y"字母，"c"字母替换为"z"字母。
而不是将字符串"abc"替换为字符串"xyz"。
 
2、使用tr命令“统一”字母大小写
# cat file | tr [a-z] [A-Z] > new_file          （小写 --> 大写）
# cat file | tr [A-Z] [a-z] > new_file          （大写 --> 小写）
 
3、把文件中的数字0-9替换为a-j
# cat file | tr [0-9] [a-j] > new_file


4、删除文件file中出现的"Snail"字符
# cat file | tr -d "Snail" > new_file
【注意】这里，凡是在file文件中出现的'S','n','a','i','l'字符都会被删除！而不是紧紧删除出现的"Snail”字符串。
 
 
5、删除文件file中出现的换行'\n'、制表'\t'字符
# cat file | tr -d "\n\t" > new_file
不可见字符都得用转义字符来表示的，这个都是统一的。
 
 
6、删除“连续着的”重复字母，只保留第一个
# cat file | tr -s [a-zA-Z] > new_file
 
 
7、删除空行
# cat file | tr -s "\n" > new_file
 
 
8、删除Windows文件“造成”的'^M'字符
# cat file | tr -d "\r" > new_file
或者
# cat file | tr -s "\r" "\n" > new_file
【注意】这里-s后面是两个参数"\r"和"\n"，用后者替换前者

 
9、用空格符\040替换制表符\011
# cat file | tr -s "\011" "\040" >new_file
 
 
10、把路径变量中的冒号":"，替换成换行符"\n"
# echo $PATH | tr -s ":" "\n"


（5）删除指定字符
    一个星期的日程表任务是从其中删除所有数字，只保留日期日期有大写，
    也有小写格式因此需指定两个字符范围[a-z]和[A-Z]，命令tr -cs "[a-z][A-Z]" "[\012*]" 
    将文件每行所有不包含在[a-z]或[A-Z]（所有希腊字母）的字符串放在字符串1中并转换为一新行-s选项表明压缩所有新行， 
    -c表明保留所有字母不动原文件如下，后跟tr命令：
tr -cs "[a-z][A-Z]" "[\012*]" <diary.txt


（6）转换控制字符
    tr的第一个功能就是转换控制字符，特别是从dos向UNIX下载文件时，忘记设置ftp关于回车换行转换的选项时更是如此cat -v filename 显示控制字符
    cat -v stat.txt
    box aa^^^^^12^M
    apple bbas^^^^23^M
    ^Z
猜想^ ^ ^ ^ ^ ^是tab键每一行以Ctrl-M结尾，文件结尾Ctrl-Z，以下是改动方法
使用-s选项，查看ASCII表^的八进制代码是136，^M是015，tab键是011，^Z是032 ,下面将按步骤完成最终功能
用tab键替换^ ^ ^ ^ ^ ^，命令为"\136" "[\011*]"将结果重定向到临时工作文件stat.tmp
tr -s "[\136]" "[\011*]" <stat.txt >stat.tmp
用新行替换每行末尾的^M，并用\n去除^Z，输入要来自于临时工作文件stat.tmp
tr -s "[\015][\032]" "\n" <stat.tmp
要删除所有的tab键，代之以空格，使用命令
tr -s "[\011]" "[\040*]" <input.file


（7）替换passwd文件中所有冒号，代之以tab键，可以增加可读性
tr -s "[:]" "[\011]" < /etc/passwd 或 tr -s "[:]" "[\t]" < /etc/passwd


（8）使路径具有可读性
    如果用 echo $PATH 或者 echo $LD_LIBRARY_PATH 等类似的命令来显示路径信息的话，
    我们看到的将会是一大堆用冒号连接在一起的路径， tr命令可以把这些冒号转换为回车，这样，这些路径就具有很好的可读性了
echo $PATH | tr ":" "\n"


（9）可以在vi内使用所有这些命令！只要记住：在tr命令前要加上您希望处理的行范围和感叹号 （！），如 1,$!tr -d '\t'（美元符号表示最后一行）


（10）另外，当有人给您发送了一个在 Mac OS 或 DOS/Windows 机器上创建的文本文件时，您会发现tr非常有用
    如果没有将文件保存为使用  UNIX 换行符来表示行结束这种格式，则需要将这样的文件转换成本机 UNIX 格式，
    否则一些命令实用程序不会正确地处理这些文件Mac OS  的行尾以回车字符(\r)结束，
    许多文本处理工具将这样的文件作为一行来处理为了纠正这个问题，可以用下列技巧：
Mac -> UNIX：tr "\r" "\n"<macfile > unixfile
UNIX -> Mac：tr "\n" "\r"<unixfile > macfile
Microsoft DOS/Windows 约定，文本的每行以回车字符(\r)并后跟换行符(\n)结束为了纠正这个问题，可以使用下列命令：
DOS -> UNIX：tr -d "\r"<dosfile > unixfile
UNIX -> DOS：在这种情况下，需要用awk，因为tr不能插入两个字符来替换一个字符要使用的 awk 命令为 
awk '{ print $0"\r" }'<unixfile > dosfile
注：都可以用sed 来完成 


