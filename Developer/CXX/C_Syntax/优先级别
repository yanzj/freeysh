### ===========================================================================C语言运算符优先级(1代表最高级别)### ===========================================================================          级别    运算符                结合性1     ()    []   ->    .    左->右        i++ i--        2     + - ++i --i sizeof       ! ~  * &  (type)      右->左 单目3      *   /   %            左->右 双目 4      +   -                左->右5      <<   >>              左->右 6      <  >  <=  >=         左->右    7      ==  !=               左->右8      &                    左->右9      ^                    左->右10     |                    左->右11     &&                   左->右12     ||                   左->右13     ?:                   右->左 三目14     赋值运算符             右->左15     ,                    左->右### ===========================================================================符号运算符:  +或- (num = -1)                                        加法运算符:   +                减法运算符:   -                              乘法运算符:   *                  除法运算符:   /                求模运算符:   %                递增运算符:   ++               递减运算符:   --                                              							   三目运算符： ?:					 逗号运算符：  ,                   ### ===========================================================================                   sizeof运算符:sizeof(int)以字节为单位返回        关系运算符小于          <小于等于      <=等于          ==大于          >大于等于      >=不等于        !=### ===========================================================================赋值运算符赋值运算符:                      = 把右侧的值加到左侧的变量上          +=从左侧的变量中减去右侧的值          -=把左侧的变量乘以右侧的值            *=把左侧的变量除以右侧的值            /=左侧的变量除以右侧的值得到的余数     %=### ===========================================================================逻辑运算符中文：    传统写法       iso646.h与         &&             and或         ||             or非         !              not逻辑非的优先级很高，和自增运算同级逻辑与的优先级比逻辑或的高，但它们的优先级很低，只比赋值运算符高。### ===========================================================================查找地址：       &运算间接运算符：     *### ===========================================================================*位运算符*二进制反码或按位取反：                ~按位与：                            &按位或：                            |按位异或：                          ^左移：                              <<右移：                              >>