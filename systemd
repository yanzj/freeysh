### ==================================================================确认1号进程
### /sbin/init 只是到 /lib/systemd/systemd 的链接文件，
### 系统的 1 号进程的确是 systemd，只不过在 ubuntu 系统中被起了个别名叫 /sbin/init
% ps u -p 1
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root         1  0.0  0.1 204592  6928 ?        Ss   11:43   0:01 /sbin/init
% ls -al /sbin/init
lrwxrwxrwx 1 root root 20 1月  15 17:59 /sbin/init -> /lib/systemd/systemd



### =====================================================================service
### 列出系统的服务
% systemctl --type=service

### service status
% systemctl status sshd.service
%systemctl is-active sshd.service



### ======================================================================target
### 切换当前运行目标,该命令仅更改当前运行目标，对下次启动无影响
% systemctl isolate graphical.target 

### 用 systemctl 检查当前的默认启动目标
% systemctl get-default    
% systemctl list-dependencies | grep target           
% systemctl list-dependencies graphical.target | grep target

### 用 systemctl 修改default.target以变更开机默认启动目标[runlevel]运行级别
% systemctl set-default multi-user.target



### =============================================================grub2修改启动顺序
### 表示要启动的第3个操作系统
% grub-set-default 2  

### 启动进入救援状态（单用户状态）
% sudo systemctl rescue


### =============================================================ＳＹＳＴＥＭＣＴＬ
systemctl start <unit>              立即激活单元
systemctl stop <unit>               立即停止单元
systemctl restart <unit>            重启单元
systemctl reload <unit>             重新加载配置
systemctl status <unit>             输出单元运行状态
systemctl is-enable <unit>          检查单元是否配置为自动启动
systemctl enable <unit>             开机自动激活单元
systemctl enable --now <unit>       设置单元为自动启动并立即启动这个单元
systemctl disable <unit>            取消开机自动激活单元
systemctl mask <unit>               禁用一个单元（禁用后，间接启动也是不可能的）： 
systemctl unmask <unit>             取消禁用一个单元
systemctl help <unit>               显示单元的手册页（必须由单元文件提供）
systemctl daemon-reload             重新载入 systemd 系统配置，扫描单元文件的变动
systemctl reboot                    重启
systemctl poweroff                  退出系统并关闭电源
systemctl suspend                   待机
systemctl hibernate                 休眠
systemctl hybrid-sleep              混合休眠模式（同时休眠到硬盘并待机）
________________________________________________________________________________










