### ===========================================================================ＦＴＰ服务器
文件传输协议（英文：File Transfer Protocol，缩写：FTP）
是用于在网络上进行文件传输的一套标准协议，使用客户/服务器模式。
它属于网络传输协议的应用层。
基础知识：
　　FTP只通过TCP连接,没有用于FTP的UDP组件.FTP不同于其他服务的是它使用了两个端口, 
　　一个数据端口和一个命令端口(或称为控制端口)。通常21端口是命令端口，20端口是数据端口。
　　当混入主动/被动模式的概念时，数据端口就有可能不是20了。
### ===========================================================================ＦＴＰ主动模式　　
主动模式FTP：指的是服务器端是主动的
　　主动模式下，FTP客户端从任意的非特殊的端口（N > 1023）连入到FTP服务器的命令端口--21端口。
　　然后客户端在N+1（N+1 >= 1024）端口监听，并且通过N+1（N+1 >= 1024）端口发送命令给FTP服务器。
　　服务器会反过来连接用户本地指定的数据端口，比如20端口。
　　以服务器端防火墙为立足点，要支持主动模式FTP需要打开如下交互中使用到的端口：
    FTP服务器命令（21）端口接受客户端任意端口（客户端初始连接）
    FTP服务器命令（21）端口到客户端端口（>1023）（服务器响应客户端命令）
    FTP服务器数据（20）端口到客户端端口（>1023）（服务器初始化数据连接到客户端数据端口）
    FTP服务器数据（20）端口接受客户端端口（>1023）（客户端发送ACK包到服务器的数据端口）
_______________________________________________________________________________    
1 在第1步中，客户端的命令端口与FTP服务器的命令端口建立连接，并发送命令“PORT 1027”。
2 然后在第2步中，FTP服务器给客户端的命令端口返回一个"ACK"。
3 在第3步中，FTP服务器发起一个从它自己的数据端口（20）到客户端先前指定的数据端口（1027）的连接，
4 最后客户端在第4步中给服务器端返回一个"ACK"。
主动方式FTP的主要问题实际上在于客户端。
FTP的客户端并没有实际建立一个到服务器数据端口的连接，它只是简单的告诉服务器自己监听的端口号，
服务器再回来连接客户端这个指定的端口。对于客户端的防火墙来说，这是从外部系统建立到内部客户端的连接，
这是通常会被阻塞的。
    
### ===========================================================================ＦＴＰ被动模式    
　　为了解决服务器发起到客户的连接的问题，人们开发了一种不同的FTP连接方式。
　　这就是所谓的被动方式，或者叫做PASV，当客户端通知服务器它处于被动模式时才启用。
_______________________________________________________________________________
　　在被动方式FTP中，命令连接和数据连接都由客户端，
　　这样就可以解决从服务器到客户端的数据端口的入方向连接被防火墙过滤掉的问题。
　　当开启一个FTP连接时，客户端打开两个任意的非特权本地端口（N >; 1024和N+1）。
　　第一个端口连接服务器的21端口，但与主动方式的FTP不同，
　　客户端不会提交PORT命令并允许服务器来回连它的数据端口，而是提交PASV命令。
　　这样做的结果是服务器会开启一个任意的非特权端口（P >; 1024），并发送PORT P命令给客户端。
　　然后客户端发起从本地端口N+1到服务器的端口P的连接用来传送数据。
_______________________________________________________________________________
　　对于服务器端的防火墙来说，必须允许下面的通讯才能支持被动方式的FTP:

    FTP服务器命令（21）端口接受客户端任意端口（客户端初始连接）
    FTP服务器命令（21）端口到客户端端口（>1023）（服务器响应客户端命令）
    FTP服务器数据端口（>1023）接受客户端端口（>1023）（客户端初始化数据连接到服务器指定的任意端口）
    FTP服务器数据端口（>1023）到客户端端口（>1023）（服务器发送ACK响应和数据到客户端的数据端口）




















    

