### ===========================================================================NFS网络文件系统
NFS（Network File System）即网络文件系统，是FreeBSD支持的文件系统中的一种，
它允许网络中的计算机之间通过TCP/IP网络共享资源。
在NFS的应用中，本地NFS的客户端应用可以透明地读写位于远端NFS服务器上的文件，
就像访问本地文件一样。
NFS端口：2049
RPC端口：111
NFS daemon端口：随机
### ===========================================================================NFS通信原理

             NFS服务器　[NFS共享目录：/home/public]
             /                              \
            /                 　　　　　　　　　\
NFS客户端A /                                    \NFS客户端B
NFS客户端A挂载NFS服务器　　　　　　　　　　　　　　　　NFS客户端A挂载NFS服务器
共享目录/home/public至本地　　　　　　　　　　　　　　共享目录/home/public至本地
/home/home/data/mypublic目录内　　　　　　　　　　　　/mnt/nfs目录内
___________________________________________________________
当我们在NFS服务器设置好一个共享目录/home/public后，
其他的有权访问NFS服务器的NFS客户端就可以将这个目录挂载到自己文件系统的某个挂载点，
这个挂载点可以自己定义，如上图客户端A与客户端B挂载的目录就不相同。
并且挂载好后我们在本地能够看到服务端/home/public的所有数据。
如果服务器端配置的客户端只读，那么客户端就只能够只读。
如果配置读写，客户端就能够进行读写。挂载后，NFS客户端查看磁盘信息命令：#df –h。
___________________________________________________________
既然NFS是通过网络来进行服务器端和客户端之间的数据传输，
那么两者之间要传输数据就要有想对应的网络端口，
NFS服务器到底使用哪个端口来进行数据传输呢？
基本上NFS这个服务器的端口开在2049,但由于文件系统非常复杂。
因此NFS还有其他的程序去启动额外的端口，
这些额外的用来传输数据的端口是随机选择的，是小于1024的端口；
既然是随机的那么客户端又是如何知道NFS服务器端到底使用的是哪个端口呢？
这时就需要通过远程过程调用（Remote Procedure Call,RPC）协议来实现了！
_______________________________________________________________________________
因为NFS支持的功能相当多，而不同的功能都会使用不同的程序来启动，
每启动一个功能就会启用一些端口来传输数据，因此NFS的功能对应的端口并不固定，
客户端要知道NFS服务器端的相关端口才能建立连接进行数据传输，
而RPC就是用来统一管理NFS端口的服务，并且统一对外的端口是111，RPC会记录NFS端口的信息，
如此我们就能够通过RPC实现服务端和客户端沟通端口信息。
PRC最主要的功能就是指定每个NFS功能所对应的port number,
并且通知客户端，让客户端可以连接到正常端口上去。
_______________________________________________________________________________
那么RPC又是如何知道每个NFS功能的端口呢？
首先当NFS启动后，就会随机的使用一些端口，
然后NFS就会向RPC去注册这些端口，RPC就会记录下这些端口，
并且RPC会开启111端口，等待客户端RPC的请求，如果客户端有请求，
那么服务器端的RPC就会将之前记录的NFS端口信息告知客户端。
如此客户端就会获取NFS服务器端的端口信息，就会以实际端口进行数据的传输了。
_______________________________________________________________________________
提示：
在启动NFS SERVER之前，
首先要启动RPC服务（即portmap服务，下同）否则NFS SERVER就无法向RPC服务区注册，
另外，如果RPC服务重新启动，原来已经注册好的NFS端口数据就会全部丢失。
因此此时RPC服务管理的NFS程序也要重新启动以重新向RPC注册。
特别注意：一般修改NFS配置文档后，是不需要重启NFS的，
直接在命令执行/etc/init.d/nfs  reload或exportfs –rv即可使修改的/etc/exports生效。
_______________________________________________________________________________
1）首先服务器端启动RPC服务，并开启111端口
___________________________________________________________
2）服务器端启动NFS服务，并向RPC注册端口信息
___________________________________________________________
3）客户端启动RPC（portmap服务），向服务端的RPC(portmap)服务请求服务端的NFS端口
___________________________________________________________
4）服务端的RPC(portmap)服务反馈NFS端口信息给客户端。
___________________________________________________________
5）客户端通过获取的NFS端口来建立和服务端的NFS连接并进行数据的传输。


  
### ===========================================================================ＮＦＳ用户身份映射
NFS没有用户登陆机制，所以客户端登陆到服务器后，会把客户端的身份映射到服务器端，
此时就会出现以下 4 种情况：
_______________________________________________________________________________
1）client和server上刚好有同样的帐号和用户组（用户名和UID都相同）
   client上的用户可以在server上按照用户松限使用文件
_______________________________________________________________________________   
2）当client和server上拥有相同的UID，但是用户名不同
   假设：client上有用户aa（UID：500），server上有用户bb（UID：500）
   在client上使server共享目录时，身份识别为bb，因为linux权限绑定在UID上
_______________________________________________________________________________  
3）server上没有client的UID
   client用户访问server时，server上没有和客户端相同的UID，
   则把此用户自动转换为 nfsnobody（UID：65534）用户
_______________________________________________________________________________  
4）cleent上是使用Root共享文件
   默认把Root转换为 nfsnobody，
   服务器端也可以修改配置文件，允许Root访问NFS服务器，默认Root权限是禁止的
### ===========================================================================ＮＦＳ权限使用说明
NFS服务的共享权限 ro｜rw｜all_squash｜root_squash
Linux系统目录的权限 /tmp 777
_______________________________________________________________________________
1 如果Linux系统权限允许访问允许写入，但是NFS服务权限为只读，此时是不允许写入的，
  它取的是最严格权限
_______________________________________________________________________________
2 如果NFS权限允许访问允许写入，但是Linux系统权限/tmp为555，此时依然不允许写入的
_______________________________________________________________________________
3 只有NFS权限允许写入允许访问，Linux系统权限允许访问允许写入，客户端才允许写入
  也就是说服务权限和系统权限都是最严格权限     
### ===========================================================================ＮＦＳ配置参数
NFS软件很简单，主要配置文件：/etc/exports，默认这个里面内容是空的，
如果没有这个文件，可以使用vim主动建立这个文件。至于NFS服务器的搭建也很简单，
只要编辑好主要配置文件/etc/exports之后，
先启动rpcbind（若已经启动了，就不要重新启动），然后再启动nfs，NFS就成功了。
     那么/etc/exports应该如何设置？
[root@server7 etc]# vi /etc/exports
/tmp/data      192.168.1.0/24(ro)          client-A.ctos.zu(rw,sync)
_______________________________________________________________________________
#[共享目录]   [客户端地址1（权限)]        [客户端地址2（权限)]
以上是一个简单案例配置，每一行最前面是要共享出来的目录，注意是以目录为单位的
共享目录：存在于我们本机上的目录，我们想共享给网络上的其他主机使用。
如我要共享/tmp/data目录，那么此选项可以就直接写/tmp/data目录，
这个目录可以依照不同的权限共享给不同的主机。


客户端地址1（参数1，参数2）：客户端地址能够设置一个网络，也可以设置单个主机。
_______________________________________________________________________________
1 指定的IP             192.168.44.4
2 指定的网段           192.168.44.0/24       192.168.44.0/255.255.255.0
3 指定的主机名         www.it168.cn
4 所人主机              *

_______________________________________________________________________________
参数：如读写权限rw,同步更新sync,压缩来访账号all_squash，
    　压缩后的匿名账号anonuid=uid，anongid=gid等等；
_______________________________________________________________________________
rw                      读写权限
_______________________________________________________________________________
ro                      Read-only表示只能读权限
_______________________________________________________________________________
all_squash              只读权限
_______________________________________________________________________________
root_squash             如果是roo登陆压缩为nfsnobody用户
                        对于访问NFS server共享目录的用户，
                        如果是root的话会被压缩成为nfsnobody用户身份。
_______________________________________________________________________________                        
no_root_squash          允许root身份登陆
                        访问nfs server共享目录的用户如果是root的话，它对该目录具有root权限。
                        这个配置原本为无盘用户准备的。用户应避免使用！
_______________________________________________________________________________
sync                    将数据同步写入到内存缓冲区与磁盘中，效率低，但是可以保证数据的一致性
                        请求或者写入数据时，数据同步写入到NFS server的硬盘中后才会返回
_______________________________________________________________________________
async                   将数据先保存到内存缓冲区中，必要时才写入磁盘  
_______________________________________________________________________________                      
anonuid                 把所用登陆的用户压缩为指定的UID用户 
_______________________________________________________________________________                       
anongid                 同anongid，就是把uid换成gid而已


### ===========================================================================ＮＦＳ部署
1、查看系统信息
要养成一个习惯，就是先查看系统版本和内核参数。
同一个软件在不同版本，内核之间是有差异的，
所以部署的方法也不一样，不要因为这个而造成不必要的错误。
___________________________________________________________
2、NFS软件安装
要部署NFS服务，必须安装下面两个软件包：nfs-utils：NFS主程序，rpcbind:PRC主程序；
NFS服务器端和Client端都需要这安装这两个软件。
注意：NFS的RPC服务器，Centos5下名字为portmap,CentOS6和CentOS7下名称为rcpbind
NFS软件包
nfs-utils:NFS主程序，包含rpc.nfsd  rpc.mount两个deamons
rpcbind:RPC主程序

___________________________________________________________
2.1、查看NFS软件包
[root@server7 ~]# rpm -qa | egrep "nfs|rpcbind"   
我的CentOS release 7.3.1611是最小化安装，默认没有安装nfs和rpcbind
Yum搜寻下安装包是否存在

___________________________________________________________
2.2、安装NFS和RPC服务
[root@server7 ~]# yum install nfs-utils  rpcbind
[root@server7 ~]# rpm -qa  | egrep "nfs|rpcbind"

___________________________________________________________
3、启动NFS服务
3.1、启动NFS服务之前先启动rpcbind服务
查看rcpbind状态
[root@server7 ~]# systemctl status rpcbind
注：rpcbind安装成功后默认已经开启，并且为开机自动启动。
如果没有启动的话，我们来重新启动rcpbind服务
[root@server7 ~]# systemctl restart  rpcbind
___________________________________________________________
查看PRC端口
[root@server7 ~]# yum install net-tools lsof
[root@server7 ~]# lsof  -i:111
[root@server7 ~]# netstat -tlunp |grep rpcbind

___________________________________________________________
未启动NFS之前查看NFS服务向PRC注册的端口信息
[root@server7 ~]# rpcinfo -p localhost


___________________________________________________________
3.2、RPC服务启动后再启动NFS服务
查看状态
[root@server7 ~]# systemctl status  nfs

默认未启动，系统开机重启后不启动，启动nfs服务，将设置为开机启动。
[root@server7 ~]# systemctl start nfs
[root@server7 ~]# systemctl enable nfs

启动NFS后我们再次查看rpc注册的端口信息
[root@server7 ~]# rpcinfo -p localhost

在确认启动没用问题后我们看一看NFS到底开了哪些端口
[root@server7 ~]# netstat -tulnp |grep -E '(rpc|nfs)'

___________________________________________________________
4、NFS常见进程详解
[root@server7 ~]# ps -ef |egrep "rpc|nfs“

___________________________________________________________
    　　nfsd
最主要的NFS服务提供程序，
这个daemon主要的功能就是管理客户端是否能够使用服务器文件系统挂载信息，
其中还包含判断这个登录用户的ID。
___________________________________________________________
      rpc.mountd
这个daemon主要功能则是管理NFS的文件系统。
当client端顺利通过rpc.nfsd登入主机后，在它可以使用NFS服务器提供规定文件之前，
还会经过文件使用权限的认证程序。
它会去读取NFS的配置文件/etc/exports来对比客户端的权限，当通过这一关之后，
client端也就取得使用NFS文件的权限。
___________________________________________________________
      rpc.lockd (非必要)
这个daemon用于管理文件的锁定方面，
当多个客户端同时尝试写入某个文件时就可以对该文件造成一些问题。
rpc.lockd则可以用来克服这此问题。
但rpc.lockd必须要同时在客户端和服务器端都开启才行。
___________________________________________________________
     rpc.statd(非必要)
这个daemon可以用来检查文件的一致性，若发生因为客户端同时使用同一个文件造成文件损坏时，
rpc.statd可以用来检测并尝试恢复该文件 







