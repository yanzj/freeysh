LVM是 Logical Volume Manager（逻辑卷管理）的简写，它是Linux环境下对磁盘分区进行管理的一种机制，
它由Heinz Mauelshagen在Linux 2.4内核上实现，目前最新版本为：稳定版1.0.5，开发版 1.1.0-rc2，以及LVM2开发版。Linux用户安装Linux操作系统时遇到的一个常见的难以决定的问题就是如何正确地评估各分区大小，以分配合适的硬盘空间。
普通的磁盘分区管理方式在逻辑分区划分好之后就无法改变其大小，当一个逻辑分区存放不下某个文件时，
这个文件因为受上层文件系统的限制，也不能跨越多个分区来存放，所以也不能同时放到别的磁盘上。
而遇到出现某个分区空间耗尽时，解决的方法通常是使用符号链接，或者使用调整分区大小的工具，
但这只是暂时解决办法，没有从根本上解决问题。随着Linux的逻辑卷管理功能的出现，
这些问题都迎刃而解，用户在无需停机的情况下可以方便地调整各个分区大小。

基本术语
前面谈到，LVM是在磁盘分区和文件系统之间添加的一个逻辑层，来为文件系统屏蔽下层磁盘分区布局，
提供一个抽象的存储卷，在存储卷上建立文件系统。首先我们讨论以下几个LVM术语：

*物理存储介质（PhysicalStorageMedia）
指系统的物理存储设备：磁盘，如：/dev/hda、/dev/sda等，是存储系统最底层的存储单元。

*物理卷（Physical Volume，PV）
指磁盘分区或从逻辑上与磁盘分区具有同样功能的设备（如RAID），是LVM的基本存储逻辑块，
但和基本的物理存储介质（如分区、磁盘等）比较，却包含有与LVM相关的管理参数。

*卷组（Volume Group，VG）
类似于非LVM系统中的物理磁盘，其由一个或多个物理卷PV组成。可以在卷组上创建一个或多个LV（逻辑卷）。

*逻辑卷（Logical Volume，LV）
类似于非LVM系统中的磁盘分区，逻辑卷建立在卷组VG之上。在逻辑卷LV之上可以建立文件系统（比如/home或者/usr等）。

*物理块（Physical Extent，PE）
每一个物理卷PV被划分为称为PE（Physical Extents）的基本单元，具有唯一编号的PE是可以被LVM寻址的最小单元。
PE的大小是可配置的，默认为4MB。所以物理卷（PV）由大小等同的基本单元PE组成。

*逻辑块（Logical Extent，LE）

LVM抽象模型
LVM抽象模型
逻辑卷LV也被划分为可被寻址的基本单位，称为LE。在同一个卷组中，LE的大小和PE是相同的，并且一一对应。
图所示LVM抽象模型，展示了PV、VG、LV三者之间关系：
和非LVM系统将包含分区信息的元数据保存在位于分区的起始位置的分区表中一样，
逻辑卷以及卷组相关的元数据也是保存在位于物理卷起始处的VGDA（卷组描述符区域）中。
VGDA包括以下内容：PV描述符、VG描述符、LV描述符、和一些PE描述符。
系统启动LVM时激活VG，并将VGDA加载至内存，来识别LV的实际物理存储位置。当系统进行I/O操作时，
就会根据VGDA建立的映射机制来访问实际的物理位置。











