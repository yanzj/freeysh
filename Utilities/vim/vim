### =============================
H       J       K       L

gg            #移动到文件首
G             #移动到文件尾
yy            #复制当前行
nyy           #复制N行(包括当前行)
dd            #剪切当前行
ndd           #剪切N行(包括当前行)
p             #粘贴至光标所在行下
x             #剪切当前字符到剪贴板
r             #替换字符


i             #在当前字符的左边插入
I             #在当前行首插入
a             #在当前字符的右边插入
A             #在当前行尾插入
o             #在当前行下面插入一个新行
O             #在当前行上面插入一个新行

0             #移动光标到当前行首。（是数字0）
^             #移动光标到当前行的第一个字母位置。
$             #移动光标到行尾。

### 替换字符

:n1,n2s/word1/word2/g
:1,$s/word1/word2/g
:n1,n2s/^/#/g
:1,$s@^@//@g
:1,$s@^//@@g

### 窗口分割

:split        #水平分割
:vsplit       #垂直分割
ctrl+w        #切换窗口
:q            #退出

! command     #显示命令输出的内容
:! witch ls   #查看命令的启动路径
:r ! date     #导入时间到光标所在处
:r!date       #导入时间信息到光标所在行下面



:n1,n2s/word1/word2/g  
:1,$s/word1/word2/g	#把第一行到最后一行的内容，关于有"word1"的字符串替换为“Word2”               
:n1,n2 w！ /root/filename       #把当前文件n1到n2行的内容,写入到/root/filename文件中
:r filename   		#导入"filename"文件内容到当前编辑的文件内容之中
               

:w
保存编辑后的文件内容，但不退出vim编辑器。
这个命令的作用是把内存缓冲区中的数据写到启动vim时指定的文件中。

:w!
强制写文件，即强制覆盖原有文件。
如果原有文件的访问权限不允许写入文件，
例如，原有的文件为只读文件，则可使用这个命令强制写入。
但是，这种命令用法仅当用户是文件的属主时才适用，
而超级用户则不受此限制。

:wq
保存文件内容后退出vim编辑器。
这个命令的作用是把内存缓冲区中的数据写到启动vim时指定的文件中，
然后退出vim编辑器。另外一种替代的方法是用ZZ命令。

:wq!
强制保存文件内容后退出vim编辑器。
这个命令的作用是把内存缓冲区中的
数据强制写到启动vim时指定的文件中，
然后退出vim编辑器。

ZZ
使用ZZ命令时，如果文件已经做过编辑处理，
则把内存缓冲区中的数据写到启动vim时指定的文件中，
然后退出vim编辑器。否则只是退出vim而已。
注意，ZZ命令前面无需加冒号“：”，也无需按Enter键。

:q
在未做任何编辑处理而准备退出vim时，
可以使用此命令。如果已做过编辑处理，
则vim不允许用户使用“:q”命令退出，
同时还会输出下列警告信息：
No write since last change (:quit!overrides)

:q!
强制退出vim编辑器，放弃编辑处理的结果。
如果确实不需要保存修改后的文件内容，
可输入“:q!”命令，强行退出vim编辑器。

:w filename
把编辑处理后的结果写到指定的文件中保存

:w! filename
把编辑处理后的结果强制保存到指定的文件中，
如果文件已经存在，则覆盖现有的文件。

:wq! filename
把编辑处理后的结果强制保存到指定的文件中，
如果文件已经存在，则覆盖现有文件，
并退出vim编辑器。
